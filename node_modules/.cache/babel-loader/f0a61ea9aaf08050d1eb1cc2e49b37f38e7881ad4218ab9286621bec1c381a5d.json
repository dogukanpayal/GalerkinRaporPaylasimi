{"ast":null,"code":"const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nconst delay = ms => new Promise(res => setTimeout(res, ms));\nexport async function login(email, password) {\n  await delay(500);\n  if (email === 'manager@example.com') {\n    localStorage.setItem('role', 'manager');\n    return {\n      role: 'manager',\n      token: 'fake-jwt-token'\n    };\n  }\n  localStorage.setItem('role', 'employee');\n  return {\n    role: 'employee',\n    token: 'fake-jwt-token'\n  };\n}\nexport async function uploadReport({\n  file,\n  notes\n}) {\n  await delay(500);\n  // Stub: Return fake success\n  return {\n    success: true,\n    id: Math.random(),\n    fileName: file === null || file === void 0 ? void 0 : file.name,\n    notes\n  };\n}\nexport async function getMyReports() {\n  await delay(500);\n  // Stub: Return fake reports\n  return [{\n    id: 1,\n    employee: 'You',\n    date: '2024-06-01',\n    status: 'Submitted'\n  }, {\n    id: 2,\n    employee: 'You',\n    date: '2024-06-02',\n    status: 'Reviewed'\n  }];\n}\nexport async function getAllReports({\n  name,\n  date,\n  status\n}) {\n  await delay(500);\n  // Stub: Return fake reports\n  return [{\n    id: 1,\n    employee: 'Alice',\n    date: '2024-06-01',\n    status: 'Submitted'\n  }, {\n    id: 2,\n    employee: 'Bob',\n    date: '2024-06-02',\n    status: 'Reviewed'\n  }, {\n    id: 3,\n    employee: 'Charlie',\n    date: '2024-06-03',\n    status: 'Rejected'\n  }].filter(r => (!name || r.employee === name) && (!date || r.date === date) && (!status || r.status === status));\n}","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_BASE_URL","delay","ms","Promise","res","setTimeout","login","email","password","localStorage","setItem","role","token","uploadReport","file","notes","success","id","Math","random","fileName","name","getMyReports","employee","date","status","getAllReports","filter","r"],"sources":["C:/Users/payal/Desktop/Galerkin_Rapor_Paylasimi/src/services/api.js"],"sourcesContent":["const API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\r\n\r\nconst delay = (ms) => new Promise((res) => setTimeout(res, ms));\r\n\r\nexport async function login(email, password) {\r\n  await delay(500);\r\n  if (email === 'manager@example.com') {\r\n    localStorage.setItem('role', 'manager');\r\n    return { role: 'manager', token: 'fake-jwt-token' };\r\n  }\r\n  localStorage.setItem('role', 'employee');\r\n  return { role: 'employee', token: 'fake-jwt-token' };\r\n}\r\n\r\nexport async function uploadReport({ file, notes }) {\r\n  await delay(500);\r\n  // Stub: Return fake success\r\n  return { success: true, id: Math.random(), fileName: file?.name, notes };\r\n}\r\n\r\nexport async function getMyReports() {\r\n  await delay(500);\r\n  // Stub: Return fake reports\r\n  return [\r\n    { id: 1, employee: 'You', date: '2024-06-01', status: 'Submitted' },\r\n    { id: 2, employee: 'You', date: '2024-06-02', status: 'Reviewed' },\r\n  ];\r\n}\r\n\r\nexport async function getAllReports({ name, date, status }) {\r\n  await delay(500);\r\n  // Stub: Return fake reports\r\n  return [\r\n    { id: 1, employee: 'Alice', date: '2024-06-01', status: 'Submitted' },\r\n    { id: 2, employee: 'Bob', date: '2024-06-02', status: 'Reviewed' },\r\n    { id: 3, employee: 'Charlie', date: '2024-06-03', status: 'Rejected' },\r\n  ].filter(\r\n    (r) =>\r\n      (!name || r.employee === name) &&\r\n      (!date || r.date === date) &&\r\n      (!status || r.status === status)\r\n  );\r\n} "],"mappings":"AAAA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;AAEvD,MAAMC,KAAK,GAAIC,EAAE,IAAK,IAAIC,OAAO,CAAEC,GAAG,IAAKC,UAAU,CAACD,GAAG,EAAEF,EAAE,CAAC,CAAC;AAE/D,OAAO,eAAeI,KAAKA,CAACC,KAAK,EAAEC,QAAQ,EAAE;EAC3C,MAAMP,KAAK,CAAC,GAAG,CAAC;EAChB,IAAIM,KAAK,KAAK,qBAAqB,EAAE;IACnCE,YAAY,CAACC,OAAO,CAAC,MAAM,EAAE,SAAS,CAAC;IACvC,OAAO;MAAEC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE;IAAiB,CAAC;EACrD;EACAH,YAAY,CAACC,OAAO,CAAC,MAAM,EAAE,UAAU,CAAC;EACxC,OAAO;IAAEC,IAAI,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAiB,CAAC;AACtD;AAEA,OAAO,eAAeC,YAAYA,CAAC;EAAEC,IAAI;EAAEC;AAAM,CAAC,EAAE;EAClD,MAAMd,KAAK,CAAC,GAAG,CAAC;EAChB;EACA,OAAO;IAAEe,OAAO,EAAE,IAAI;IAAEC,EAAE,EAAEC,IAAI,CAACC,MAAM,CAAC,CAAC;IAAEC,QAAQ,EAAEN,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEO,IAAI;IAAEN;EAAM,CAAC;AAC1E;AAEA,OAAO,eAAeO,YAAYA,CAAA,EAAG;EACnC,MAAMrB,KAAK,CAAC,GAAG,CAAC;EAChB;EACA,OAAO,CACL;IAAEgB,EAAE,EAAE,CAAC;IAAEM,QAAQ,EAAE,KAAK;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAY,CAAC,EACnE;IAAER,EAAE,EAAE,CAAC;IAAEM,QAAQ,EAAE,KAAK;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAW,CAAC,CACnE;AACH;AAEA,OAAO,eAAeC,aAAaA,CAAC;EAAEL,IAAI;EAAEG,IAAI;EAAEC;AAAO,CAAC,EAAE;EAC1D,MAAMxB,KAAK,CAAC,GAAG,CAAC;EAChB;EACA,OAAO,CACL;IAAEgB,EAAE,EAAE,CAAC;IAAEM,QAAQ,EAAE,OAAO;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAY,CAAC,EACrE;IAAER,EAAE,EAAE,CAAC;IAAEM,QAAQ,EAAE,KAAK;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAW,CAAC,EAClE;IAAER,EAAE,EAAE,CAAC;IAAEM,QAAQ,EAAE,SAAS;IAAEC,IAAI,EAAE,YAAY;IAAEC,MAAM,EAAE;EAAW,CAAC,CACvE,CAACE,MAAM,CACLC,CAAC,IACA,CAAC,CAACP,IAAI,IAAIO,CAAC,CAACL,QAAQ,KAAKF,IAAI,MAC5B,CAACG,IAAI,IAAII,CAAC,CAACJ,IAAI,KAAKA,IAAI,CAAC,KACzB,CAACC,MAAM,IAAIG,CAAC,CAACH,MAAM,KAAKA,MAAM,CACnC,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}