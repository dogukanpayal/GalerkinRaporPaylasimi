{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\payal\\\\Desktop\\\\Galerkin_Rapor_Paylasimi\\\\frontend\\\\src\\\\pages\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport UploadReportCard from '../components/UploadReportCard';\nimport ReportsTable from '../components/ReportsTable';\nimport { useAuth } from '../contexts/AuthContext';\nimport { getMyReports, getAllReports } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DashboardPage() {\n  _s();\n  const [reports, setReports] = useState([]);\n  const [filters, setFilters] = useState({\n    date: '',\n    status: '',\n    name: ''\n  });\n  const [sorting, setSorting] = useState({\n    field: 'createdAt',\n    direction: 'desc'\n  });\n  const [page, setPage] = useState(0);\n  const [totalReports, setTotalReports] = useState(0);\n  const {\n    user\n  } = useAuth();\n  const location = useLocation();\n  const isMyReportsView = location.pathname === '/my-reports';\n  const ROWS_PER_PAGE = 10;\n  const fetchReports = async () => {\n    if (!user) return;\n    try {\n      const params = {\n        ...filters,\n        sortBy: sorting.field,\n        sortOrder: sorting.direction,\n        page: page + 1,\n        size: ROWS_PER_PAGE\n      };\n      const fetchFn = isMyReportsView ? getMyReports : getAllReports;\n      const data = await fetchFn(params);\n      setReports(data.reports);\n      setTotalReports(data.totalItems);\n    } catch (error) {\n      console.error(\"Failed to fetch reports:\", error);\n      setReports([]);\n      setTotalReports(0);\n    }\n  };\n  const handleUploadSuccess = () => {\n    if (page !== 0) {\n      setPage(0);\n    } else {\n      fetchReports();\n    }\n  };\n  useEffect(() => {\n    fetchReports();\n  }, [user, filters, sorting, page, isMyReportsView]); // Add isMyReportsView to dependency array\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isMyReportsView && /*#__PURE__*/_jsxDEV(UploadReportCard, {\n      onUpload: handleUploadSuccess\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 28\n    }, this), /*#__PURE__*/_jsxDEV(ReportsTable, {\n      reports: reports,\n      filters: filters,\n      setFilters: setFilters,\n      fetchReports: fetchReports,\n      sorting: sorting,\n      setSorting: setSorting,\n      page: page,\n      setPage: setPage,\n      rowsPerPage: ROWS_PER_PAGE,\n      totalReports: totalReports,\n      isMyReportsView: isMyReportsView\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(DashboardPage, \"qu9/Tf7cs1vmksnrbcCbRMQLR+A=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","UploadReportCard","ReportsTable","useAuth","getMyReports","getAllReports","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardPage","_s","reports","setReports","filters","setFilters","date","status","name","sorting","setSorting","field","direction","page","setPage","totalReports","setTotalReports","user","location","isMyReportsView","pathname","ROWS_PER_PAGE","fetchReports","params","sortBy","sortOrder","size","fetchFn","data","totalItems","error","console","handleUploadSuccess","children","onUpload","fileName","_jsxFileName","lineNumber","columnNumber","rowsPerPage","_c","$RefreshReg$"],"sources":["C:/Users/payal/Desktop/Galerkin_Rapor_Paylasimi/frontend/src/pages/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useLocation } from 'react-router-dom';\r\nimport UploadReportCard from '../components/UploadReportCard';\r\nimport ReportsTable from '../components/ReportsTable';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { getMyReports, getAllReports } from '../services/api';\r\n\r\nexport default function DashboardPage() {\r\n  const [reports, setReports] = useState([]);\r\n  const [filters, setFilters] = useState({ date: '', status: '', name: '' });\r\n  const [sorting, setSorting] = useState({ field: 'createdAt', direction: 'desc' });\r\n  const [page, setPage] = useState(0);\r\n  const [totalReports, setTotalReports] = useState(0);\r\n  const { user } = useAuth();\r\n  const location = useLocation();\r\n  \r\n  const isMyReportsView = location.pathname === '/my-reports';\r\n  const ROWS_PER_PAGE = 10;\r\n\r\n  const fetchReports = async () => {\r\n    if (!user) return;\r\n    try {\r\n      const params = {\r\n        ...filters,\r\n        sortBy: sorting.field,\r\n        sortOrder: sorting.direction,\r\n        page: page + 1,\r\n        size: ROWS_PER_PAGE,\r\n      };\r\n      \r\n      const fetchFn = isMyReportsView ? getMyReports : getAllReports;\r\n      const data = await fetchFn(params);\r\n      \r\n      setReports(data.reports);\r\n      setTotalReports(data.totalItems);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch reports:\", error);\r\n      setReports([]);\r\n      setTotalReports(0);\r\n    }\r\n  };\r\n  \r\n  const handleUploadSuccess = () => {\r\n    if (page !== 0) {\r\n      setPage(0);\r\n    } else {\r\n      fetchReports();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchReports();\r\n  }, [user, filters, sorting, page, isMyReportsView]); // Add isMyReportsView to dependency array\r\n\r\n  return (\r\n    <>\r\n      {!isMyReportsView && <UploadReportCard onUpload={handleUploadSuccess} />}\r\n      <ReportsTable\r\n        reports={reports}\r\n        filters={filters}\r\n        setFilters={setFilters}\r\n        fetchReports={fetchReports}\r\n        sorting={sorting}\r\n        setSorting={setSorting}\r\n        page={page}\r\n        setPage={setPage}\r\n        rowsPerPage={ROWS_PER_PAGE}\r\n        totalReports={totalReports}\r\n        isMyReportsView={isMyReportsView}\r\n      />\r\n    </>\r\n  );\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}