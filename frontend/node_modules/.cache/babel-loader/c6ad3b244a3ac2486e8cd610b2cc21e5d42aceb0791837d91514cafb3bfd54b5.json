{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\payal\\\\Desktop\\\\Galerkin_Rapor_Paylasimi\\\\frontend\\\\src\\\\pages\\\\DashboardPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Box } from '@mui/material';\nimport UploadReportCard from '../components/UploadReportCard';\nimport ReportsTable from '../components/ReportsTable';\nimport { useAuth } from '../contexts/AuthContext';\nimport { getMyReports, getAllReports } from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DashboardPage() {\n  _s();\n  const [reports, setReports] = useState([]);\n  const [filters, setFilters] = useState({\n    date: '',\n    status: ''\n  });\n  const [sorting, setSorting] = useState({\n    field: 'createdAt',\n    direction: 'desc'\n  });\n  const {\n    user\n  } = useAuth();\n  const fetchReports = async () => {\n    if (!user) return;\n    try {\n      const params = {\n        ...filters,\n        sortBy: sorting.field,\n        sortOrder: sorting.direction\n      };\n      const data = user.role === 'manager' ? await getAllReports(params) : await getMyReports(params);\n      setReports(data);\n    } catch (error) {\n      console.error(\"Failed to fetch reports:\", error);\n      setReports([]);\n    }\n  };\n  useEffect(() => {\n    fetchReports();\n  }, [user, filters, sorting]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(UploadReportCard, {\n      onUpload: fetchReports\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReportsTable, {\n      reports: reports,\n      filters: filters,\n      setFilters: setFilters,\n      fetchReports: fetchReports,\n      sorting: sorting,\n      setSorting: setSorting,\n      setReports: setReports\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(DashboardPage, \"Ha2pbhd2hRCj3kuVNNr5A7xI2Us=\", false, function () {\n  return [useAuth];\n});\n_c = DashboardPage;\nvar _c;\n$RefreshReg$(_c, \"DashboardPage\");","map":{"version":3,"names":["React","useState","useEffect","Box","UploadReportCard","ReportsTable","useAuth","getMyReports","getAllReports","jsxDEV","_jsxDEV","Fragment","_Fragment","DashboardPage","_s","reports","setReports","filters","setFilters","date","status","sorting","setSorting","field","direction","user","fetchReports","params","sortBy","sortOrder","data","role","error","console","children","onUpload","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/payal/Desktop/Galerkin_Rapor_Paylasimi/frontend/src/pages/DashboardPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Box } from '@mui/material';\r\nimport UploadReportCard from '../components/UploadReportCard';\r\nimport ReportsTable from '../components/ReportsTable';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { getMyReports, getAllReports } from '../services/api';\r\n\r\nexport default function DashboardPage() {\r\n  const [reports, setReports] = useState([]);\r\n  const [filters, setFilters] = useState({ date: '', status: '' });\r\n  const [sorting, setSorting] = useState({ field: 'createdAt', direction: 'desc' });\r\n  const { user } = useAuth();\r\n\r\n  const fetchReports = async () => {\r\n    if (!user) return;\r\n    try {\r\n      const params = { ...filters, sortBy: sorting.field, sortOrder: sorting.direction };\r\n      const data = user.role === 'manager'\r\n        ? await getAllReports(params)\r\n        : await getMyReports(params);\r\n      setReports(data);\r\n    } catch (error) {\r\n      console.error(\"Failed to fetch reports:\", error);\r\n      setReports([]);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchReports();\r\n  }, [user, filters, sorting]);\r\n\r\n  return (\r\n    <>\r\n      <UploadReportCard onUpload={fetchReports} />\r\n      <ReportsTable\r\n        reports={reports}\r\n        filters={filters}\r\n        setFilters={setFilters}\r\n        fetchReports={fetchReports}\r\n        sorting={sorting}\r\n        setSorting={setSorting}\r\n        setReports={setReports}\r\n      />\r\n    </>\r\n  );\r\n} "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,eAAe;AACnC,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,YAAY,MAAM,4BAA4B;AACrD,SAASC,OAAO,QAAQ,yBAAyB;AACjD,SAASC,YAAY,EAAEC,aAAa,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE9D,eAAe,SAASC,aAAaA,CAAA,EAAG;EAAAC,EAAA;EACtC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC;IAAEkB,IAAI,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC;EAChE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC;IAAEsB,KAAK,EAAE,WAAW;IAAEC,SAAS,EAAE;EAAO,CAAC,CAAC;EACjF,MAAM;IAAEC;EAAK,CAAC,GAAGnB,OAAO,CAAC,CAAC;EAE1B,MAAMoB,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAI,CAACD,IAAI,EAAE;IACX,IAAI;MACF,MAAME,MAAM,GAAG;QAAE,GAAGV,OAAO;QAAEW,MAAM,EAAEP,OAAO,CAACE,KAAK;QAAEM,SAAS,EAAER,OAAO,CAACG;MAAU,CAAC;MAClF,MAAMM,IAAI,GAAGL,IAAI,CAACM,IAAI,KAAK,SAAS,GAChC,MAAMvB,aAAa,CAACmB,MAAM,CAAC,GAC3B,MAAMpB,YAAY,CAACoB,MAAM,CAAC;MAC9BX,UAAU,CAACc,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDhB,UAAU,CAAC,EAAE,CAAC;IAChB;EACF,CAAC;EAEDd,SAAS,CAAC,MAAM;IACdwB,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,CAACD,IAAI,EAAER,OAAO,EAAEI,OAAO,CAAC,CAAC;EAE5B,oBACEX,OAAA,CAAAE,SAAA;IAAAsB,QAAA,gBACExB,OAAA,CAACN,gBAAgB;MAAC+B,QAAQ,EAAET;IAAa;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC5C7B,OAAA,CAACL,YAAY;MACXU,OAAO,EAAEA,OAAQ;MACjBE,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA,UAAW;MACvBQ,YAAY,EAAEA,YAAa;MAC3BL,OAAO,EAAEA,OAAQ;MACjBC,UAAU,EAAEA,UAAW;MACvBN,UAAU,EAAEA;IAAW;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC;EAAA,eACF,CAAC;AAEP;AAACzB,EAAA,CAtCuBD,aAAa;EAAA,QAIlBP,OAAO;AAAA;AAAAkC,EAAA,GAJF3B,aAAa;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}