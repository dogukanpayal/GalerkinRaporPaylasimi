{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\payal\\\\Desktop\\\\Galerkin_Rapor_Paylasimi\\\\frontend\\\\src\\\\contexts\\\\AuthContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { login as apiLogin, register as apiRegister, setAuthToken } from '../services/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n\n  // On mount, check for token in localStorage\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    const userData = localStorage.getItem('user');\n    if (token && userData) {\n      setAuthToken(token);\n      setUser(JSON.parse(userData));\n    }\n  }, []);\n  const login = async ({\n    email,\n    password\n  }) => {\n    const {\n      token,\n      user\n    } = await apiLogin({\n      email,\n      password\n    });\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    setAuthToken(token);\n    setUser(user);\n  };\n  const register = async ({\n    email,\n    password\n  }) => {\n    const {\n      token,\n      user\n    } = await apiRegister({\n      email,\n      password\n    });\n    localStorage.setItem('token', token);\n    localStorage.setItem('user', JSON.stringify(user));\n    setAuthToken(token);\n    setUser(user);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    setAuthToken(null);\n    setUser(null);\n  };\n  const isAuthenticated = !!user;\n\n  // Axios interceptor to always send token\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setAuthToken(token);\n    const interceptor = axios.interceptors.request.use(config => {\n      if (token) config.headers.Authorization = `Bearer ${token}`;\n      return config;\n    }, error => Promise.reject(error));\n    return () => axios.interceptors.request.eject(interceptor);\n  }, [user]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      register,\n      logout,\n      isAuthenticated\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_s(AuthProvider, \"yy5ZvVAQsprr2pHcLIzfQbyK1Yg=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","login","apiLogin","register","apiRegister","setAuthToken","axios","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","user","setUser","token","localStorage","getItem","userData","JSON","parse","email","password","setItem","stringify","logout","removeItem","isAuthenticated","interceptor","interceptors","request","use","config","headers","Authorization","error","Promise","reject","eject","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/payal/Desktop/Galerkin_Rapor_Paylasimi/frontend/src/contexts/AuthContext.jsx"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { login as apiLogin, register as apiRegister, setAuthToken } from '../services/api';\r\nimport axios from 'axios';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport function AuthProvider({ children }) {\r\n  const [user, setUser] = useState(null);\r\n\r\n  // On mount, check for token in localStorage\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    const userData = localStorage.getItem('user');\r\n    if (token && userData) {\r\n      setAuthToken(token);\r\n      setUser(JSON.parse(userData));\r\n    }\r\n  }, []);\r\n\r\n  const login = async ({ email, password }) => {\r\n    const { token, user } = await apiLogin({ email, password });\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    setAuthToken(token);\r\n    setUser(user);\r\n  };\r\n\r\n  const register = async ({ email, password }) => {\r\n    const { token, user } = await apiRegister({ email, password });\r\n    localStorage.setItem('token', token);\r\n    localStorage.setItem('user', JSON.stringify(user));\r\n    setAuthToken(token);\r\n    setUser(user);\r\n  };\r\n\r\n  const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n    setAuthToken(null);\r\n    setUser(null);\r\n  };\r\n\r\n  const isAuthenticated = !!user;\r\n\r\n  // Axios interceptor to always send token\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    setAuthToken(token);\r\n    const interceptor = axios.interceptors.request.use(\r\n      (config) => {\r\n        if (token) config.headers.Authorization = `Bearer ${token}`;\r\n        return config;\r\n      },\r\n      (error) => Promise.reject(error)\r\n    );\r\n    return () => axios.interceptors.request.eject(interceptor);\r\n  }, [user]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, login, register, logout, isAuthenticated }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\n\r\nexport function useAuth() {\r\n  return useContext(AuthContext);\r\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}